services:
  customer:
    container_name: customer
    build:
      context: customers
      dockerfile: Dockerfile
      target: development
    volumes:
      - ./customers:/usr/src/customers
    env_file:
      - .env
    command: npm run start:dev
    ports:
      - "8010:8010"
    depends_on:
      - database
      - rabbitmq
    networks:
      - networks

  book:
    container_name: book
    build:
      context: books
      dockerfile: Dockerfile
      target: development
    volumes:
      - ./books:/usr/src/books
    env_file:
      - .env
    command: npm run start:dev
    ports:
      - "8020:8020"
    depends_on:
      - database
      - rabbitmq
    networks:
      - networks

  order:
    container_name: order
    build:
      context: orders
      dockerfile: Dockerfile
      target: development
    volumes:
      - ./orders:/usr/src/orders
    env_file:
      - .env
    command: npm run start:dev
    ports:
      - "8030:8030"
    depends_on:
      - database
      - rabbitmq
    networks:
      - networks

  database:
    container_name: database
    image: postgres:latest
    restart: always
    env_file:
      - .env
    ports:
      - "5433:5432"
    networks:
      - networks

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3.13.3-management
    env_file:
      - .env
    ports:
      - "15672:15672"
      - "5672:5672"
    networks:
      - networks

networks:
  networks:
    driver: bridge